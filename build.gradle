
plugins {
    id 'io.ia.sdk.modl' version '0.0.1-SNAPSHOT'
}

ext {
    sdk_version = "8.1.0"
}

version = "0.0.1-SNAPSHOT"

ignitionModule {
    /*
     * Human readable name of the module, as will be displayed on the gateway status page
     */
    name = "DIO Zero"

    /*
     * Name of the '.modl' file to be created, without file extension.
     */
    fileName = "DIO-Zero.modl"
    /*
     * Unique identifier for the module.  Reverse domain convention is recommended (e.g.: com.mycompany.charting-module)
     */
    id = "com.griffithindustries.scripting.diozero.DIOZero"

    moduleVersion = version

    moduleDescription = "An Ignition module to expose the DIOZero Java library to Ignition scripting."
    /*
     * Minimum version of Ignition required for the module to function correctly.  This typically won't change over
     * the course of a major Ignition (7.9, 8.0, etc) version, except for when the Ignition Platform adds/changes APIs
     * used by the module.
     */
    requiredIgnitionVersion = "8.1.0"
    /*
     *  This is a map of String: String, where the 'key' represents the fully qualified path to the project
     *  (using gradle path syntax), and the value is the shorthand Scope string.
     *  Example entry: [ ":gateway": "G", ":common": "GC", ":vision-client": "C" ]
     */
    projectScopes = [
        ":client" : "CD",
        ":common" : "GDC",
        ":designer" : "D",
        ":gateway" : "G"
    ]

    /*
     * Add your module dependencies here, following the examples, with scope being one or more of G, C or D,
     * for (G)ateway, (D)esigner, Vision (C)lient.
     *
     * Example Value:
     * moduleDependencies = [
           "com.inductiveautomation.vision": "CD",
           "com.inductiveautomation.opcua": "G"
     * ]
     */
    moduleDependencies = [ : ]

    /*
     * Map of fully qualified hook class to the shorthand scope.  Only one scope per hook class.
     *
     * Example entry: "com.myorganization.vectorizer.VectorizerDesignerHook": "D"
     */
    hooks = [
        "com.griffithindustries.scripting.diozero.gateway.DIOZeroGatewayHook" : "G",
        "com.griffithindustries.scripting.diozero.designer.DIOZeroDesignerHook" : "D",
        "com.griffithindustries.scripting.diozero.client.DIOZeroClientHook" : "C"
    ]

    /**
     * Path to the property file that contains key/value pairs which define the locations of and credentials for
     * module signing.  Optional if passing values as runtime flags, project props, or using the gradle.properties file
     * to store the required key:value pairs.
     *
     * In a property file, the following keys are required, shown with example values:
     * ```
     * ignition.signing.keystoreFile=/path/to/keystorefile.jks
     * ignition.signing.keystorePassword=somepassword
     * ignition.signing.certFile=/path/to/certfile.pem
     * ignition.signing.certPassword=somepassword
     * ignition.signing.alias=selfsigned
     * ```
     *
     * To use runtime values, or to override values in the property file, call the sign task with input flags, or mix
     * and match as desired. Flag names are the same as the final element in the property file keys.  E.g. -
     * `ignition.signing.keystoreFile` becomes the runtime task flag of `keystoreFile`.
     *```
     * ./gradlew signModule --keystoreFile=/path/to/keystore --keystorePassword=somepassword --alias=myAlias
     *```
     *
     */
     // Default convention value is applied automatically using value shown below.  Uncomment to set/override.
     propertyFile = project.file("gradle.properties")
}
